Python基础知识11（面向对象概念、类和实例、静态和实例属性）

（1）面向对象概念
定义和实现 对象 可以 直接对应 现实世界里面的事物；
面向对象的设计（OOD - Object-Oriented Design）；
   1、分析要解决的显示世界问题；
   2、定义出各种对象代表现实世界的对象
   3、通过设计对象之间的关系和交互行为来设计系统

#对象的定义：定义对象在这个系统里面的属性和行为

（2）类和实例

#OOD软件设计把对象和它的属性和行为的定义叫 类的定义
   类表示了这类对象所共有的属性和行为（比如老虎一些共有属性，固定体重、名称等；而行为有叫唤，吃食物等）
   类是OOD最基本的概念
   类是OOD中同一种类型对象的书面定义
   定义了类，就定义了对象类型（包括在系统里面的属性和行为）

#注意：命名类名时，一般首字母大写
-----------------------------------------------------------------

class People: #一个类
    name = 'tom'     #属性---相当于特征
    age = 23
#使用这个类首先实例化  具体对象
t1 = People()    #t1就被定义成实时存在的人了

#想要知道类中人的属性，比如名字name、年龄age
print(t1.age)
print(t1.name)

#打印结果如下
23
tom

----------------------------------------------------------------也可以重新定义属性的值，并不一定要使用类中定义好的
class People: #一个类
    name = 'tom'
    age = 23
    
t1 = People()
t1.age = 25
t1.name = 'jingan'

print(t1.age)
print(t1.name)

#打印结果如下
25
jingan

（3）静态属性和实例属性

#静态属性（类属性）
   #比如老虎的名称 （即该类的所有实例共享的属性）
----------------------------------------------------    
class People: #一个类
    'this is people class'
    name = 'tom' #静态变量
    age = 23 #静态变量-----也叫类变量，即在这个类中都适用
t1 = People()
t1.age = 25
t1.name = 'jingan'
print(t1.age)
print(t1.name)
print(t1.__doc__)

#当我们再次定义一个t2对象，打印其名字的属性时，打印出来的值是23
#说明在类中事先定义好的属性就叫静态变量
t2 = People()
print(t2.age)

#打印结果如下
25
jingan
this is people class
23

    
-----------------------------------------------------

#实例属性
    #老虎的体重（每个实例独有的属性）
    #定义在初始化方法 __init__里
    #self的概念
---------------------------------------------------    
class People: #一个类
    'this is people class'
    typePro = 'people'
    def __init__(self, weight = 100):  #初始化方法==构造方法,注意self代表对象本身
        self.weight = weight #其中weight就是实例属性---变量（格式就是：实例+点+属性 = 变量值）
        print('this is init!')

#只要创建了实例都会调用上面的方法
t1 = People(300)  #实例化对象
print(t1.weight)
t2 = People(200)
print(t2.weight)
#如果上面的值是缺省的值，那么实例化不输入体重时，就输入默认的确认值
t3 = People()
print(t3.weight)  #（格式：实例+点+体重 = 变量值）

#打印结果如下
this is init!
300
this is init!
200
this is init!
100